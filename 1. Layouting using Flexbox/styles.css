.container {
  max-width: 1200px;
  margin: auto auto;
}

.box {
  width: 50px;
  height: 50px;
  margin: 5px;
  background-color: #f2f2f2;
  border: 1px solid #ccc;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 24px;
}

.box.tall {
  height: 100px;
}

.box.wide {
  width: 100px;
}

.red {
  background-color: red;
}

.blue {
  background-color: blue;
}

.green {
  background-color: green;
}

/* TODO 1 */
.todo-1-container {
  /* TODO 1.1.1 Set the display of this div to flex*/
  display: flex;
  /* TODO 1.1.2 Set the flex direction to row. Then set it to column. What's the difference?*/
  flex-direction: row;
  flex-direction: column;
  /* Answer: It changes the placement of the div elements based on an axis. 
  Horizontal for row, vertical for column.*/

  /* TODO 1.1.3 Set the flex direction to row. Then enable flex wrap. What does wrap do? */
  flex-direction: row;
  flex-wrap: wrap;
  /* Answer: Without wrap, when the screen is small, the boxes are squashed to narrow in order to fit in one line. 
  With wrap, the boxes instead move to the next line in order to preserve the original dimensions of the div elements.*/

  /* Todo 1.1.4 Set the gap of the container to 10px. Now change it to 20px. What does gap do? */
  gap: 10px;
  gap: 20px;
  /* Answer: It increases the gap between the boxes.
  It also considers the gap between boxes placed in adjacent row lines.  
  However, it doesn't consider the gap between the box and the edge of the container.*/
}

/* TODO 2 */
.todo-2-container {
  /* TODO 1.2.1 Set the display to flex and flex direction to row */
  display: flex;
  flex-direction: row;
  /* TODO 1.2.2 Justify the content to start, then end, then center. Make sure to see how the position of the divs change*/
  justify-content: flex-start;
  justify-content: flex-end;
  justify-content: center;

  /* TODO 1.2.3 Align the items start, then end, then center. Make sure to see how the position of the divs change*/
  align-items: flex-start;
  align-items: flex-end;
  align-items: center;

  /* TODO 1.2.4 Set the flex direction to column and play around with justify-content and align-items */
  flex-direction: column;

  /*Answer: Flex-start moves the div elements to the left or top.
  Flex-end moves the div elements to the right or bottom.
  Center moves the div elements to the center, depending on which property and axis is used.
  Flex-direction sets the axis that justify-content uses to move the div elements.
  Align-items on the other hand moves the div elements through another axis.
  Align-items uses an axis that is perpendicular to the axis set by flex-direction.*/
}

/* TODO 3 */
.todo-3-container {
  /* Todo 1.3.1 Set the display to flex and align items center */
  display: flex;
  align-items: center;
}

/* Select the red box */ /*Sir pano magselect?*/
.todo-3-container .box {
  /* Todo 1.3.2 Align this item to start. Try out the other possible values. What happens? */
  align-self: flex-end;
  /* Answer: Individual items can be moved around using align self.*/
}

/* Select the green box */
.todo-3-container .box tall {
  /* Todo 1.3.3 Set flex grow to 1 */
  flex-grow: 1;
}

/* Select the blue box */
.todo-3-container .box {
  /* Todo 1.3.4 Set flex grow to 2. Try out the other values. What happens? */
  flex-grow: 2;
  /* Answer: The div items actually grow and scale.*/
}

/* TODO 4 */
.todo-4-container {
  /* Set the display to flex */
  display: flex;
}

/* Select the red box */
.todo-4-container .box red {
  /* Set margin left to auto.  */
  margin-left: auto;
  order: 1;
}

/* Select the green box */
.todo-4-container .box tall green {
  /* Set margin right to auto */
  margin-right: auto;
}

/* Select the blue box */
.todo-4-container .box wide blue {
  /* Set the order to  1. Try chaging the order of the other divs. What does order do?*/
  order: -2;
  /* Answer: Order manipulates the arrangement of the div items by switching their place.
  Negative numbers switch an item's placement with the item on the left while positive numbers switch with the right.*/
}
